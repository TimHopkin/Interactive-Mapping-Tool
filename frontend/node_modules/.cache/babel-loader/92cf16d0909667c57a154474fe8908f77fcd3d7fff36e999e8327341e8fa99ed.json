{"ast":null,"code":"var _jsxFileName = \"/Users/timhopkin/Documents/Software Development/Interactive Mapping Tool/frontend/src/components/upload/UploadProgress.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadProgress = ({\n  progress\n}) => {\n  // Calculate color based on progress\n  const getProgressColor = value => {\n    if (value < 30) return '#3498db'; // Blue\n    if (value < 70) return '#2ecc71'; // Green\n    return '#27ae60'; // Darker green\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-progress-container\",\n    role: \"progressbar\",\n    \"aria-valuenow\": progress,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-label\": `Upload progress: ${progress}%`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-label\",\n        children: \"Uploading files...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-percentage\",\n        children: [progress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-track\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          width: `${progress}%`,\n          backgroundColor: getProgressColor(progress)\n        },\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-status\",\n      children: progress < 100 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: \"Please wait while your files are being uploaded...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: \"Upload complete. Processing your files...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sr-only\",\n      \"aria-live\": \"polite\",\n      children: [progress < 25 && \"Upload started\", progress >= 25 && progress < 50 && \"Upload is 25% complete\", progress >= 50 && progress < 75 && \"Upload is 50% complete\", progress >= 75 && progress < 100 && \"Upload is 75% complete\", progress >= 100 && \"Upload is complete, now processing your files\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = UploadProgress;\nexport default UploadProgress;\nvar _c;\n$RefreshReg$(_c, \"UploadProgress\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UploadProgress","progress","getProgressColor","value","className","role","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/timhopkin/Documents/Software Development/Interactive Mapping Tool/frontend/src/components/upload/UploadProgress.js"],"sourcesContent":["import React from 'react';\n\nconst UploadProgress = ({ progress }) => {\n  // Calculate color based on progress\n  const getProgressColor = (value) => {\n    if (value < 30) return '#3498db'; // Blue\n    if (value < 70) return '#2ecc71'; // Green\n    return '#27ae60'; // Darker green\n  };\n\n  return (\n    <div \n      className=\"upload-progress-container\" \n      role=\"progressbar\" \n      aria-valuenow={progress} \n      aria-valuemin=\"0\" \n      aria-valuemax=\"100\"\n      aria-label={`Upload progress: ${progress}%`}\n    >\n      <div className=\"progress-info\">\n        <span className=\"progress-label\">Uploading files...</span>\n        <span className=\"progress-percentage\">{progress}%</span>\n      </div>\n      \n      <div className=\"progress-track\">\n        <div \n          className=\"progress-bar\" \n          style={{ \n            width: `${progress}%`,\n            backgroundColor: getProgressColor(progress)\n          }}\n          aria-hidden=\"true\"\n        ></div>\n      </div>\n      \n      <div className=\"progress-status\">\n        {progress < 100 ? (\n          <p className=\"status-message\">Please wait while your files are being uploaded...</p>\n        ) : (\n          <p className=\"status-message\">Upload complete. Processing your files...</p>\n        )}\n      </div>\n      \n      {/* This message is only for screen readers */}\n      <div className=\"sr-only\" aria-live=\"polite\">\n        {progress < 25 && \"Upload started\"}\n        {progress >= 25 && progress < 50 && \"Upload is 25% complete\"}\n        {progress >= 50 && progress < 75 && \"Upload is 50% complete\"}\n        {progress >= 75 && progress < 100 && \"Upload is 75% complete\"}\n        {progress >= 100 && \"Upload is complete, now processing your files\"}\n      </div>\n    </div>\n  );\n};\n\nexport default UploadProgress;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC;EACA,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAIA,KAAK,GAAG,EAAE,EAAE,OAAO,SAAS,CAAC,CAAC;IAClC,IAAIA,KAAK,GAAG,EAAE,EAAE,OAAO,SAAS,CAAC,CAAC;IAClC,OAAO,SAAS,CAAC,CAAC;EACpB,CAAC;EAED,oBACEJ,OAAA;IACEK,SAAS,EAAC,2BAA2B;IACrCC,IAAI,EAAC,aAAa;IAClB,iBAAeJ,QAAS;IACxB,iBAAc,GAAG;IACjB,iBAAc,KAAK;IACnB,cAAY,oBAAoBA,QAAQ,GAAI;IAAAK,QAAA,gBAE5CP,OAAA;MAAKK,SAAS,EAAC,eAAe;MAAAE,QAAA,gBAC5BP,OAAA;QAAMK,SAAS,EAAC,gBAAgB;QAAAE,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC1DX,OAAA;QAAMK,SAAS,EAAC,qBAAqB;QAAAE,QAAA,GAAEL,QAAQ,EAAC,GAAC;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eAENX,OAAA;MAAKK,SAAS,EAAC,gBAAgB;MAAAE,QAAA,eAC7BP,OAAA;QACEK,SAAS,EAAC,cAAc;QACxBO,KAAK,EAAE;UACLC,KAAK,EAAE,GAAGX,QAAQ,GAAG;UACrBY,eAAe,EAAEX,gBAAgB,CAACD,QAAQ;QAC5C,CAAE;QACF,eAAY;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAENX,OAAA;MAAKK,SAAS,EAAC,iBAAiB;MAAAE,QAAA,EAC7BL,QAAQ,GAAG,GAAG,gBACbF,OAAA;QAAGK,SAAS,EAAC,gBAAgB;QAAAE,QAAA,EAAC;MAAkD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEpFX,OAAA;QAAGK,SAAS,EAAC,gBAAgB;QAAAE,QAAA,EAAC;MAAyC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC3E;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNX,OAAA;MAAKK,SAAS,EAAC,SAAS;MAAC,aAAU,QAAQ;MAAAE,QAAA,GACxCL,QAAQ,GAAG,EAAE,IAAI,gBAAgB,EACjCA,QAAQ,IAAI,EAAE,IAAIA,QAAQ,GAAG,EAAE,IAAI,wBAAwB,EAC3DA,QAAQ,IAAI,EAAE,IAAIA,QAAQ,GAAG,EAAE,IAAI,wBAAwB,EAC3DA,QAAQ,IAAI,EAAE,IAAIA,QAAQ,GAAG,GAAG,IAAI,wBAAwB,EAC5DA,QAAQ,IAAI,GAAG,IAAI,+CAA+C;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GAnDId,cAAc;AAqDpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}