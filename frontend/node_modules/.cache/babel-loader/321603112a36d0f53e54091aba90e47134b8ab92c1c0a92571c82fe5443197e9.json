{"ast":null,"code":"var _jsxFileName = \"/Users/timhopkin/Documents/Software Development/Interactive Mapping Tool/frontend/src/components/upload/DataUploadComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport FileFormatGuide from './FileFormatGuide';\nimport UploadProgress from './UploadProgress';\nimport { useUserPreferences } from '../../context/UserPreferencesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataUploadComponent = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [datasetName, setDatasetName] = useState('');\n  const [datasetDescription, setDatasetDescription] = useState('');\n  const [showFormatGuide, setShowFormatGuide] = useState(false);\n  const [validationErrors, setValidationErrors] = useState({});\n  const fileInputRef = useRef(null);\n  const {\n    preferences\n  } = useUserPreferences();\n  const handleFileChange = e => {\n    const selectedFiles = Array.from(e.target.files);\n    setFiles(selectedFiles);\n    validateFiles(selectedFiles);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.currentTarget.classList.add('drag-over');\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.currentTarget.classList.remove('drag-over');\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.currentTarget.classList.remove('drag-over');\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    setFiles(droppedFiles);\n    validateFiles(droppedFiles);\n\n    // Announce to screen readers\n    announceToScreenReader(`${droppedFiles.length} files dropped: ${droppedFiles.map(f => f.name).join(', ')}`);\n  };\n  const validateFiles = filesToValidate => {\n    const errors = {};\n    const validExtensions = ['.shp', '.dbf', '.shx', '.prj', '.geojson', '.json', '.csv', '.tif', '.tiff', '.zip'];\n    const maxFileSize = 50 * 1024 * 1024; // 50MB\n    let totalSize = 0;\n    filesToValidate.forEach(file => {\n      const extension = '.' + file.name.split('.').pop().toLowerCase();\n      totalSize += file.size;\n      if (!validExtensions.includes(extension)) {\n        errors.fileType = `File \"${file.name}\" has an unsupported format. Please use one of the supported formats.`;\n      }\n      if (file.size > maxFileSize) {\n        errors.fileSize = `File \"${file.name}\" exceeds the 50MB size limit.`;\n      }\n    });\n    if (totalSize > 200 * 1024 * 1024) {\n      // 200MB\n      errors.totalSize = 'Total upload size exceeds the 200MB limit.';\n    }\n    setValidationErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const validateForm = () => {\n    const errors = {};\n    if (!datasetName.trim()) {\n      errors.name = 'Please provide a dataset name';\n    }\n    if (files.length === 0) {\n      errors.files = 'Please select at least one file to upload';\n    }\n    setValidationErrors({\n      ...validationErrors,\n      ...errors\n    });\n    return Object.keys(errors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate form\n    if (!validateForm()) {\n      // Announce errors to screen readers\n      const errorMessages = Object.values(validationErrors).join('. ');\n      announceToScreenReader(`Form has errors: ${errorMessages}`);\n      return;\n    }\n    setUploading(true);\n    setUploadStatus(null);\n    setUploadProgress(0);\n    const formData = new FormData();\n    files.forEach(file => {\n      formData.append('files', file);\n    });\n    formData.append('name', datasetName);\n    formData.append('description', datasetDescription);\n    try {\n      // This endpoint will need to be implemented in the backend\n      const response = await axios.post('/api/data/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(percentCompleted);\n\n          // Announce progress milestones to screen readers\n          if (percentCompleted % 25 === 0) {\n            announceToScreenReader(`Upload progress: ${percentCompleted}%`);\n          }\n        }\n      });\n      setUploadStatus({\n        success: true,\n        message: 'Files uploaded successfully',\n        data: response.data\n      });\n\n      // Announce success to screen readers\n      announceToScreenReader('Upload completed successfully. You can now view your data on the map or perform analysis.');\n\n      // Reset form after successful upload\n      setFiles([]);\n      setDatasetName('');\n      setDatasetDescription('');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message;\n      setUploadStatus({\n        success: false,\n        message: `Upload failed: ${errorMessage}`\n      });\n\n      // Announce error to screen readers\n      announceToScreenReader(`Upload failed: ${errorMessage}`);\n    } finally {\n      setUploading(false);\n    }\n  };\n  const triggerFileSelect = () => {\n    fileInputRef.current.click();\n  };\n  const announceToScreenReader = message => {\n    const announcer = document.getElementById('sr-announcer');\n    if (announcer) {\n      announcer.textContent = message;\n    }\n  };\n  const toggleFormatGuide = () => {\n    setShowFormatGuide(!showFormatGuide);\n  };\n  const resetForm = () => {\n    setFiles([]);\n    setDatasetName('');\n    setDatasetDescription('');\n    setUploadStatus(null);\n    setValidationErrors({});\n\n    // Reset file input\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sr-announcer\",\n      className: \"sr-only\",\n      \"aria-live\": \"polite\",\n      \"aria-atomic\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"upload-heading\",\n        children: \"Upload Geospatial Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload your spatial data files to analyze and visualize on the map.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"format-guide-toggle\",\n          onClick: toggleFormatGuide,\n          \"aria-expanded\": showFormatGuide,\n          \"aria-controls\": \"format-guide\",\n          children: showFormatGuide ? 'Hide Format Guide' : 'Show Format Guide'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), showFormatGuide && /*#__PURE__*/_jsxDEV(FileFormatGuide, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        \"aria-labelledby\": \"upload-heading\",\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"datasetName\",\n            className: validationErrors.name ? 'error' : '',\n            children: [\"Dataset Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-hidden\": \"true\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-indicator sr-only\",\n              children: \"required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"datasetName\",\n            name: \"datasetName\",\n            value: datasetName,\n            onChange: e => setDatasetName(e.target.value),\n            required: true,\n            \"aria-required\": \"true\",\n            \"aria-invalid\": !!validationErrors.name,\n            \"aria-describedby\": validationErrors.name ? 'name-error' : undefined,\n            disabled: uploading,\n            className: `${preferences.textSize !== 'default' ? preferences.textSize : ''} ${validationErrors.name ? 'error-input' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), validationErrors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"name-error\",\n            className: \"error-message\",\n            role: \"alert\",\n            children: validationErrors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"datasetDescription\",\n            children: [\"Dataset Description\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"optional-indicator\",\n              children: \"(optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"datasetDescription\",\n            name: \"datasetDescription\",\n            value: datasetDescription,\n            onChange: e => setDatasetDescription(e.target.value),\n            rows: 3,\n            disabled: uploading,\n            className: preferences.textSize !== 'default' ? preferences.textSize : '',\n            \"aria-describedby\": \"description-help\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"description-help\",\n            className: \"help-text\",\n            children: \"Add details about your dataset to help with identification and searching.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `file-upload-area ${validationErrors.files ? 'error' : ''}`,\n          onDragOver: handleDragOver,\n          onDragLeave: handleDragLeave,\n          onDrop: handleDrop,\n          onKeyDown: e => {\n            if (e.key === 'Enter' || e.key === ' ') {\n              triggerFileSelect();\n            }\n          },\n          tabIndex: \"0\",\n          role: \"button\",\n          \"aria-describedby\": \"file-instructions file-error\",\n          \"aria-invalid\": !!validationErrors.files,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"files\",\n            name: \"files\",\n            ref: fileInputRef,\n            multiple: true,\n            onChange: handleFileChange,\n            accept: \".shp,.dbf,.shx,.prj,.geojson,.json,.csv,.tif,.tiff,.zip\",\n            required: true,\n            \"aria-required\": \"true\",\n            className: \"file-input sr-only\",\n            disabled: uploading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-icon\",\n            \"aria-hidden\": \"true\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"48\",\n              height: \"48\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\",\n                fill: \"currentColor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"file-instructions\",\n            className: \"upload-instructions-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Drag and drop files here or \", /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"file-select-btn\",\n                onClick: triggerFileSelect,\n                children: \"select files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"file-types\",\n              children: \"Supported formats: Shapefile, GeoJSON, CSV, GeoTIFF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), validationErrors.files && /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"file-error\",\n            className: \"error-message\",\n            role: \"alert\",\n            children: validationErrors.files\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), validationErrors.fileType && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            role: \"alert\",\n            children: validationErrors.fileType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), validationErrors.fileSize && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            role: \"alert\",\n            children: validationErrors.fileSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), validationErrors.totalSize && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            role: \"alert\",\n            children: validationErrors.totalSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-files\",\n          \"aria-live\": \"polite\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Selected Files: \", files.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"file-list\",\n            \"aria-label\": \"List of selected files\",\n            children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"file-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-icon\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-name\",\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-size\",\n                children: [\"(\", (file.size / 1024).toFixed(2), \" KB)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"remove-file\",\n                onClick: () => {\n                  const newFiles = [...files];\n                  newFiles.splice(index, 1);\n                  setFiles(newFiles);\n                  validateFiles(newFiles);\n                },\n                \"aria-label\": `Remove ${file.name}`,\n                disabled: uploading,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), uploading && /*#__PURE__*/_jsxDEV(UploadProgress, {\n          progress: uploadProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary-button upload-button\",\n            disabled: uploading || files.length === 0,\n            \"aria-busy\": uploading,\n            children: uploading ? 'Uploading...' : 'Upload Files'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"secondary-button reset-button\",\n            onClick: resetForm,\n            disabled: uploading,\n            children: \"Reset Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `upload-status ${uploadStatus.success ? 'success' : 'error'}`,\n        role: \"status\",\n        \"aria-live\": \"polite\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-icon\",\n          \"aria-hidden\": \"true\",\n          children: uploadStatus.success ? '✓' : '⚠'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: uploadStatus.success ? 'Upload Successful' : 'Upload Failed'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: uploadStatus.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), uploadStatus.success && uploadStatus.data && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Dataset ID: \", uploadStatus.data.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Files processed: \", uploadStatus.data.processed_files]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: `/map?dataset=${uploadStatus.data.id}`,\n                className: \"view-data-link\",\n                children: \"View on Map\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `/analysis?dataset=${uploadStatus.data.id}`,\n                className: \"analyze-data-link\",\n                children: \"Analyze Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(DataUploadComponent, \"jrItywapcKa/Hep05s/r/4c7h28=\", false, function () {\n  return [useUserPreferences];\n});\n_c = DataUploadComponent;\nexport default DataUploadComponent;\nvar _c;\n$RefreshReg$(_c, \"DataUploadComponent\");","map":{"version":3,"names":["React","useState","useRef","axios","FileFormatGuide","UploadProgress","useUserPreferences","jsxDEV","_jsxDEV","DataUploadComponent","_s","files","setFiles","uploading","setUploading","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","datasetName","setDatasetName","datasetDescription","setDatasetDescription","showFormatGuide","setShowFormatGuide","validationErrors","setValidationErrors","fileInputRef","preferences","handleFileChange","e","selectedFiles","Array","from","target","validateFiles","handleDragOver","preventDefault","stopPropagation","currentTarget","classList","add","handleDragLeave","remove","handleDrop","droppedFiles","dataTransfer","announceToScreenReader","length","map","f","name","join","filesToValidate","errors","validExtensions","maxFileSize","totalSize","forEach","file","extension","split","pop","toLowerCase","size","includes","fileType","fileSize","Object","keys","validateForm","trim","handleSubmit","errorMessages","values","formData","FormData","append","response","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","success","message","data","error","_error$response","_error$response$data","errorMessage","triggerFileSelect","current","click","announcer","document","getElementById","textContent","toggleFormatGuide","resetForm","value","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","onSubmit","noValidate","htmlFor","onChange","required","undefined","disabled","textSize","role","rows","onDragOver","onDragLeave","onDrop","onKeyDown","key","tabIndex","ref","multiple","accept","width","height","viewBox","d","fill","index","toFixed","newFiles","splice","progress","processed_files","href","_c","$RefreshReg$"],"sources":["/Users/timhopkin/Documents/Software Development/Interactive Mapping Tool/frontend/src/components/upload/DataUploadComponent.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport FileFormatGuide from './FileFormatGuide';\nimport UploadProgress from './UploadProgress';\nimport { useUserPreferences } from '../../context/UserPreferencesContext';\n\nconst DataUploadComponent = () => {\n  const [files, setFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [datasetName, setDatasetName] = useState('');\n  const [datasetDescription, setDatasetDescription] = useState('');\n  const [showFormatGuide, setShowFormatGuide] = useState(false);\n  const [validationErrors, setValidationErrors] = useState({});\n  const fileInputRef = useRef(null);\n  const { preferences } = useUserPreferences();\n\n  const handleFileChange = (e) => {\n    const selectedFiles = Array.from(e.target.files);\n    setFiles(selectedFiles);\n    validateFiles(selectedFiles);\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.currentTarget.classList.add('drag-over');\n  };\n\n  const handleDragLeave = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.currentTarget.classList.remove('drag-over');\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.currentTarget.classList.remove('drag-over');\n    \n    const droppedFiles = Array.from(e.dataTransfer.files);\n    setFiles(droppedFiles);\n    validateFiles(droppedFiles);\n    \n    // Announce to screen readers\n    announceToScreenReader(`${droppedFiles.length} files dropped: ${droppedFiles.map(f => f.name).join(', ')}`);\n  };\n\n  const validateFiles = (filesToValidate) => {\n    const errors = {};\n    const validExtensions = ['.shp', '.dbf', '.shx', '.prj', '.geojson', '.json', '.csv', '.tif', '.tiff', '.zip'];\n    const maxFileSize = 50 * 1024 * 1024; // 50MB\n    let totalSize = 0;\n    \n    filesToValidate.forEach(file => {\n      const extension = '.' + file.name.split('.').pop().toLowerCase();\n      totalSize += file.size;\n      \n      if (!validExtensions.includes(extension)) {\n        errors.fileType = `File \"${file.name}\" has an unsupported format. Please use one of the supported formats.`;\n      }\n      \n      if (file.size > maxFileSize) {\n        errors.fileSize = `File \"${file.name}\" exceeds the 50MB size limit.`;\n      }\n    });\n    \n    if (totalSize > 200 * 1024 * 1024) { // 200MB\n      errors.totalSize = 'Total upload size exceeds the 200MB limit.';\n    }\n    \n    setValidationErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const validateForm = () => {\n    const errors = {};\n    \n    if (!datasetName.trim()) {\n      errors.name = 'Please provide a dataset name';\n    }\n    \n    if (files.length === 0) {\n      errors.files = 'Please select at least one file to upload';\n    }\n    \n    setValidationErrors({...validationErrors, ...errors});\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate form\n    if (!validateForm()) {\n      // Announce errors to screen readers\n      const errorMessages = Object.values(validationErrors).join('. ');\n      announceToScreenReader(`Form has errors: ${errorMessages}`);\n      return;\n    }\n\n    setUploading(true);\n    setUploadStatus(null);\n    setUploadProgress(0);\n\n    const formData = new FormData();\n    files.forEach(file => {\n      formData.append('files', file);\n    });\n    \n    formData.append('name', datasetName);\n    formData.append('description', datasetDescription);\n\n    try {\n      // This endpoint will need to be implemented in the backend\n      const response = await axios.post('/api/data/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: (progressEvent) => {\n          const percentCompleted = Math.round(\n            (progressEvent.loaded * 100) / progressEvent.total\n          );\n          setUploadProgress(percentCompleted);\n          \n          // Announce progress milestones to screen readers\n          if (percentCompleted % 25 === 0) {\n            announceToScreenReader(`Upload progress: ${percentCompleted}%`);\n          }\n        }\n      });\n\n      setUploadStatus({\n        success: true,\n        message: 'Files uploaded successfully',\n        data: response.data\n      });\n      \n      // Announce success to screen readers\n      announceToScreenReader('Upload completed successfully. You can now view your data on the map or perform analysis.');\n      \n      // Reset form after successful upload\n      setFiles([]);\n      setDatasetName('');\n      setDatasetDescription('');\n      \n    } catch (error) {\n      const errorMessage = error.response?.data?.message || error.message;\n      setUploadStatus({\n        success: false,\n        message: `Upload failed: ${errorMessage}`\n      });\n      \n      // Announce error to screen readers\n      announceToScreenReader(`Upload failed: ${errorMessage}`);\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const triggerFileSelect = () => {\n    fileInputRef.current.click();\n  };\n\n  const announceToScreenReader = (message) => {\n    const announcer = document.getElementById('sr-announcer');\n    if (announcer) {\n      announcer.textContent = message;\n    }\n  };\n\n  const toggleFormatGuide = () => {\n    setShowFormatGuide(!showFormatGuide);\n  };\n\n  const resetForm = () => {\n    setFiles([]);\n    setDatasetName('');\n    setDatasetDescription('');\n    setUploadStatus(null);\n    setValidationErrors({});\n    \n    // Reset file input\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  return (\n    <div className=\"upload-component\">\n      {/* Screen reader announcer */}\n      <div \n        id=\"sr-announcer\" \n        className=\"sr-only\" \n        aria-live=\"polite\" \n        aria-atomic=\"true\"\n      ></div>\n      \n      <div className=\"upload-container\">\n        <h2 id=\"upload-heading\">Upload Geospatial Data</h2>\n        \n        <div className=\"upload-instructions\">\n          <p>Upload your spatial data files to analyze and visualize on the map.</p>\n          <button \n            type=\"button\" \n            className=\"format-guide-toggle\" \n            onClick={toggleFormatGuide}\n            aria-expanded={showFormatGuide}\n            aria-controls=\"format-guide\"\n          >\n            {showFormatGuide ? 'Hide Format Guide' : 'Show Format Guide'}\n          </button>\n          \n          {showFormatGuide && <FileFormatGuide />}\n        </div>\n        \n        <form \n          onSubmit={handleSubmit}\n          aria-labelledby=\"upload-heading\" \n          noValidate\n        >\n          <div className=\"form-group\">\n            <label htmlFor=\"datasetName\" className={validationErrors.name ? 'error' : ''}>\n              Dataset Name <span aria-hidden=\"true\">*</span>\n              <span className=\"required-indicator sr-only\">required</span>\n            </label>\n            <input\n              type=\"text\"\n              id=\"datasetName\"\n              name=\"datasetName\"\n              value={datasetName}\n              onChange={(e) => setDatasetName(e.target.value)}\n              required\n              aria-required=\"true\"\n              aria-invalid={!!validationErrors.name}\n              aria-describedby={validationErrors.name ? 'name-error' : undefined}\n              disabled={uploading}\n              className={`${preferences.textSize !== 'default' ? preferences.textSize : ''} ${validationErrors.name ? 'error-input' : ''}`}\n            />\n            {validationErrors.name && (\n              <div id=\"name-error\" className=\"error-message\" role=\"alert\">\n                {validationErrors.name}\n              </div>\n            )}\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"datasetDescription\">\n              Dataset Description\n              <span className=\"optional-indicator\">(optional)</span>\n            </label>\n            <textarea\n              id=\"datasetDescription\"\n              name=\"datasetDescription\"\n              value={datasetDescription}\n              onChange={(e) => setDatasetDescription(e.target.value)}\n              rows={3}\n              disabled={uploading}\n              className={preferences.textSize !== 'default' ? preferences.textSize : ''}\n              aria-describedby=\"description-help\"\n            />\n            <div id=\"description-help\" className=\"help-text\">\n              Add details about your dataset to help with identification and searching.\n            </div>\n          </div>\n          \n          <div \n            className={`file-upload-area ${validationErrors.files ? 'error' : ''}`}\n            onDragOver={handleDragOver}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter' || e.key === ' ') {\n                triggerFileSelect();\n              }\n            }}\n            tabIndex=\"0\"\n            role=\"button\"\n            aria-describedby=\"file-instructions file-error\"\n            aria-invalid={!!validationErrors.files}\n          >\n            <input\n              type=\"file\"\n              id=\"files\"\n              name=\"files\"\n              ref={fileInputRef}\n              multiple\n              onChange={handleFileChange}\n              accept=\".shp,.dbf,.shx,.prj,.geojson,.json,.csv,.tif,.tiff,.zip\"\n              required\n              aria-required=\"true\"\n              className=\"file-input sr-only\"\n              disabled={uploading}\n            />\n            \n            <div className=\"upload-icon\" aria-hidden=\"true\">\n              <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\">\n                <path d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\" fill=\"currentColor\"/>\n              </svg>\n            </div>\n            \n            <div id=\"file-instructions\" className=\"upload-instructions-text\">\n              <p>Drag and drop files here or <button type=\"button\" className=\"file-select-btn\" onClick={triggerFileSelect}>select files</button></p>\n              <p className=\"file-types\">Supported formats: Shapefile, GeoJSON, CSV, GeoTIFF</p>\n            </div>\n            \n            {validationErrors.files && (\n              <div id=\"file-error\" className=\"error-message\" role=\"alert\">\n                {validationErrors.files}\n              </div>\n            )}\n            \n            {validationErrors.fileType && (\n              <div className=\"error-message\" role=\"alert\">\n                {validationErrors.fileType}\n              </div>\n            )}\n            \n            {validationErrors.fileSize && (\n              <div className=\"error-message\" role=\"alert\">\n                {validationErrors.fileSize}\n              </div>\n            )}\n            \n            {validationErrors.totalSize && (\n              <div className=\"error-message\" role=\"alert\">\n                {validationErrors.totalSize}\n              </div>\n            )}\n          </div>\n          \n          {files.length > 0 && (\n            <div className=\"selected-files\" aria-live=\"polite\">\n              <h3>Selected Files: {files.length}</h3>\n              <ul className=\"file-list\" aria-label=\"List of selected files\">\n                {files.map((file, index) => (\n                  <li key={index} className=\"file-item\">\n                    <span className=\"file-icon\" aria-hidden=\"true\"></span>\n                    <span className=\"file-name\">{file.name}</span>\n                    <span className=\"file-size\">({(file.size / 1024).toFixed(2)} KB)</span>\n                    <button \n                      type=\"button\" \n                      className=\"remove-file\" \n                      onClick={() => {\n                        const newFiles = [...files];\n                        newFiles.splice(index, 1);\n                        setFiles(newFiles);\n                        validateFiles(newFiles);\n                      }}\n                      aria-label={`Remove ${file.name}`}\n                      disabled={uploading}\n                    >\n                      <span aria-hidden=\"true\">×</span>\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          \n          {uploading && (\n            <UploadProgress progress={uploadProgress} />\n          )}\n          \n          <div className=\"form-actions\">\n            <button \n              type=\"submit\" \n              className=\"primary-button upload-button\"\n              disabled={uploading || files.length === 0}\n              aria-busy={uploading}\n            >\n              {uploading ? 'Uploading...' : 'Upload Files'}\n            </button>\n            \n            <button \n              type=\"button\" \n              className=\"secondary-button reset-button\"\n              onClick={resetForm}\n              disabled={uploading}\n            >\n              Reset Form\n            </button>\n          </div>\n        </form>\n        \n        {uploadStatus && (\n          <div \n            className={`upload-status ${uploadStatus.success ? 'success' : 'error'}`}\n            role=\"status\"\n            aria-live=\"polite\"\n          >\n            <div className=\"status-icon\" aria-hidden=\"true\">\n              {uploadStatus.success ? '✓' : '⚠'}\n            </div>\n            <div className=\"status-content\">\n              <h3>{uploadStatus.success ? 'Upload Successful' : 'Upload Failed'}</h3>\n              <p>{uploadStatus.message}</p>\n              {uploadStatus.success && uploadStatus.data && (\n                <div className=\"upload-details\">\n                  <p>Dataset ID: {uploadStatus.data.id}</p>\n                  <p>Files processed: {uploadStatus.data.processed_files}</p>\n                  <div className=\"upload-actions\">\n                    <a href={`/map?dataset=${uploadStatus.data.id}`} className=\"view-data-link\">\n                      View on Map\n                    </a>\n                    <a href={`/analysis?dataset=${uploadStatus.data.id}`} className=\"analyze-data-link\">\n                      Analyze Data\n                    </a>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DataUploadComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}