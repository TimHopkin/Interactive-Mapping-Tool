{"ast":null,"code":"var _jsxFileName = \"/Users/timhopkin/Documents/Software Development/Interactive Mapping Tool/frontend/src/pages/MapView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport MapComponent from '../components/map/MapComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = () => {\n  _s();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const datasetId = queryParams.get('dataset');\n  const analysisId = queryParams.get('analysis');\n  const [mapLayers, setMapLayers] = useState([]);\n  const [activeLayers, setActiveLayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [center, setCenter] = useState([0, 0]);\n  const [zoom, setZoom] = useState(2);\n  useEffect(() => {\n    const fetchMapData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        let response;\n        if (datasetId) {\n          // Fetch layers for a specific dataset\n          response = await axios.get(`/api/data/datasets/${datasetId}/layers`);\n        } else if (analysisId) {\n          // Fetch layers for a specific analysis result\n          response = await axios.get(`/api/analysis/${analysisId}/layers`);\n        } else {\n          // Fetch all available layers\n          response = await axios.get('/api/data/layers');\n        }\n        setMapLayers(response.data);\n\n        // If there are layers with geographic extents, calculate center and zoom\n        if (response.data.length > 0 && response.data[0].extent) {\n          const extent = response.data[0].extent;\n          setCenter([(extent.north + extent.south) / 2, (extent.east + extent.west) / 2]);\n\n          // TODO: Calculate appropriate zoom level based on extent\n          setZoom(10);\n        }\n\n        // Activate all layers by default\n        setActiveLayers(response.data.map(layer => layer.id));\n      } catch (error) {\n        console.error('Error fetching map data:', error);\n        setError('Failed to load map data. Please try again later.');\n\n        // Set mock data for demonstration\n        const mockLayers = [{\n          id: 1,\n          name: 'Land Use',\n          type: 'geojson',\n          // Mock GeoJSON data\n          data: {\n            type: 'FeatureCollection',\n            features: [{\n              type: 'Feature',\n              properties: {\n                name: 'Residential Area',\n                type: 'residential'\n              },\n              geometry: {\n                type: 'Polygon',\n                coordinates: [[[-74.01, 40.71], [-74.01, 40.72], [-74.00, 40.72], [-74.00, 40.71], [-74.01, 40.71]]]\n              }\n            }]\n          },\n          style: {\n            color: '#ff7800',\n            weight: 2,\n            opacity: 0.65\n          }\n        }, {\n          id: 2,\n          name: 'Points of Interest',\n          type: 'marker',\n          position: [-74.005, 40.715],\n          popupContent: 'City Center'\n        }];\n        setMapLayers(mockLayers);\n        setActiveLayers(mockLayers.map(layer => layer.id));\n        setCenter([40.715, -74.005]);\n        setZoom(13);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMapData();\n  }, [datasetId, analysisId]);\n  const toggleLayer = layerId => {\n    setActiveLayers(prev => {\n      if (prev.includes(layerId)) {\n        return prev.filter(id => id !== layerId);\n      } else {\n        return [...prev, layerId];\n      }\n    });\n  };\n\n  // Filter active layers to pass to the map component\n  const activeMapLayers = mapLayers.filter(layer => activeLayers.includes(layer.id));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-view-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Interactive Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading map data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"layer-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Map Layers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"layer-list\",\n          children: mapLayers.map(layer => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: activeLayers.includes(layer.id),\n                onChange: () => toggleLayer(layer.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this), layer.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)\n          }, layer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapComponent, {\n        layers: activeMapLayers,\n        center: center,\n        zoom: zoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(MapView, \"610Fru4OYOChMYnkkQ5aNr4MwFI=\", false, function () {\n  return [useLocation];\n});\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","MapComponent","jsxDEV","_jsxDEV","MapView","_s","location","queryParams","URLSearchParams","search","datasetId","get","analysisId","mapLayers","setMapLayers","activeLayers","setActiveLayers","loading","setLoading","error","setError","center","setCenter","zoom","setZoom","fetchMapData","response","data","length","extent","north","south","east","west","map","layer","id","console","mockLayers","name","type","features","properties","geometry","coordinates","style","color","weight","opacity","position","popupContent","toggleLayer","layerId","prev","includes","filter","activeMapLayers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","checked","onChange","layers","_c","$RefreshReg$"],"sources":["/Users/timhopkin/Documents/Software Development/Interactive Mapping Tool/frontend/src/pages/MapView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport MapComponent from '../components/map/MapComponent';\n\nconst MapView = () => {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const datasetId = queryParams.get('dataset');\n  const analysisId = queryParams.get('analysis');\n  \n  const [mapLayers, setMapLayers] = useState([]);\n  const [activeLayers, setActiveLayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [center, setCenter] = useState([0, 0]);\n  const [zoom, setZoom] = useState(2);\n\n  useEffect(() => {\n    const fetchMapData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        let response;\n        \n        if (datasetId) {\n          // Fetch layers for a specific dataset\n          response = await axios.get(`/api/data/datasets/${datasetId}/layers`);\n        } else if (analysisId) {\n          // Fetch layers for a specific analysis result\n          response = await axios.get(`/api/analysis/${analysisId}/layers`);\n        } else {\n          // Fetch all available layers\n          response = await axios.get('/api/data/layers');\n        }\n        \n        setMapLayers(response.data);\n        \n        // If there are layers with geographic extents, calculate center and zoom\n        if (response.data.length > 0 && response.data[0].extent) {\n          const extent = response.data[0].extent;\n          setCenter([(extent.north + extent.south) / 2, (extent.east + extent.west) / 2]);\n          \n          // TODO: Calculate appropriate zoom level based on extent\n          setZoom(10);\n        }\n        \n        // Activate all layers by default\n        setActiveLayers(response.data.map(layer => layer.id));\n        \n      } catch (error) {\n        console.error('Error fetching map data:', error);\n        setError('Failed to load map data. Please try again later.');\n        \n        // Set mock data for demonstration\n        const mockLayers = [\n          {\n            id: 1,\n            name: 'Land Use',\n            type: 'geojson',\n            // Mock GeoJSON data\n            data: {\n              type: 'FeatureCollection',\n              features: [\n                {\n                  type: 'Feature',\n                  properties: { name: 'Residential Area', type: 'residential' },\n                  geometry: {\n                    type: 'Polygon',\n                    coordinates: [\n                      [\n                        [-74.01, 40.71],\n                        [-74.01, 40.72],\n                        [-74.00, 40.72],\n                        [-74.00, 40.71],\n                        [-74.01, 40.71]\n                      ]\n                    ]\n                  }\n                }\n              ]\n            },\n            style: {\n              color: '#ff7800',\n              weight: 2,\n              opacity: 0.65\n            }\n          },\n          {\n            id: 2,\n            name: 'Points of Interest',\n            type: 'marker',\n            position: [-74.005, 40.715],\n            popupContent: 'City Center'\n          }\n        ];\n        \n        setMapLayers(mockLayers);\n        setActiveLayers(mockLayers.map(layer => layer.id));\n        setCenter([40.715, -74.005]);\n        setZoom(13);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchMapData();\n  }, [datasetId, analysisId]);\n\n  const toggleLayer = (layerId) => {\n    setActiveLayers(prev => {\n      if (prev.includes(layerId)) {\n        return prev.filter(id => id !== layerId);\n      } else {\n        return [...prev, layerId];\n      }\n    });\n  };\n\n  // Filter active layers to pass to the map component\n  const activeMapLayers = mapLayers.filter(layer => activeLayers.includes(layer.id));\n\n  return (\n    <div className=\"map-view-page\">\n      <div className=\"map-controls\">\n        <h2>Interactive Map</h2>\n        \n        {loading ? (\n          <p>Loading map data...</p>\n        ) : error ? (\n          <div className=\"error-message\">\n            <p>{error}</p>\n          </div>\n        ) : (\n          <div className=\"layer-controls\">\n            <h3>Map Layers</h3>\n            <ul className=\"layer-list\">\n              {mapLayers.map(layer => (\n                <li key={layer.id}>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={activeLayers.includes(layer.id)}\n                      onChange={() => toggleLayer(layer.id)}\n                    />\n                    {layer.name}\n                  </label>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"map-container\">\n        <MapComponent \n          layers={activeMapLayers}\n          center={center}\n          zoom={zoom}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MapView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}