{"ast":null,"code":"var _jsxFileName = \"/Users/timhopkin/Documents/Software Development/Interactive Mapping Tool/frontend/src/context/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  // Get initial theme preference (system, light, dark)\n  const getInitialTheme = () => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      return savedTheme;\n    }\n\n    // Default to system preference\n    return 'system';\n  };\n  const [theme, setTheme] = useState(getInitialTheme);\n  const [currentTheme, setCurrentTheme] = useState('light'); // Actual applied theme\n\n  // Listen for system preference changes\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = () => {\n      if (theme === 'system') {\n        setCurrentTheme(mediaQuery.matches ? 'dark' : 'light');\n      }\n    };\n\n    // Set initial value\n    handleChange();\n\n    // Listen for changes\n    mediaQuery.addEventListener('change', handleChange);\n    return () => {\n      mediaQuery.removeEventListener('change', handleChange);\n    };\n  }, [theme]);\n\n  // Update current theme when theme preference changes\n  useEffect(() => {\n    if (theme === 'system') {\n      const isDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      setCurrentTheme(isDarkMode ? 'dark' : 'light');\n    } else {\n      setCurrentTheme(theme);\n    }\n\n    // Save to localStorage\n    localStorage.setItem('theme', theme);\n\n    // Apply theme to the document\n    document.documentElement.setAttribute('data-theme', currentTheme);\n  }, [theme, currentTheme]);\n  const value = {\n    theme,\n    setTheme,\n    currentTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"VqvQdsI2tG0+HjFIWopNKXaswc4=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","ThemeProvider","children","_s2","getInitialTheme","savedTheme","localStorage","getItem","theme","setTheme","currentTheme","setCurrentTheme","mediaQuery","window","matchMedia","handleChange","matches","addEventListener","removeEventListener","isDarkMode","setItem","document","documentElement","setAttribute","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/timhopkin/Documents/Software Development/Interactive Mapping Tool/frontend/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider = ({ children }) => {\n  // Get initial theme preference (system, light, dark)\n  const getInitialTheme = () => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      return savedTheme;\n    }\n    \n    // Default to system preference\n    return 'system';\n  };\n\n  const [theme, setTheme] = useState(getInitialTheme);\n  const [currentTheme, setCurrentTheme] = useState('light'); // Actual applied theme\n\n  // Listen for system preference changes\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    \n    const handleChange = () => {\n      if (theme === 'system') {\n        setCurrentTheme(mediaQuery.matches ? 'dark' : 'light');\n      }\n    };\n    \n    // Set initial value\n    handleChange();\n    \n    // Listen for changes\n    mediaQuery.addEventListener('change', handleChange);\n    \n    return () => {\n      mediaQuery.removeEventListener('change', handleChange);\n    };\n  }, [theme]);\n\n  // Update current theme when theme preference changes\n  useEffect(() => {\n    if (theme === 'system') {\n      const isDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      setCurrentTheme(isDarkMode ? 'dark' : 'light');\n    } else {\n      setCurrentTheme(theme);\n    }\n    \n    // Save to localStorage\n    localStorage.setItem('theme', theme);\n\n    // Apply theme to the document\n    document.documentElement.setAttribute('data-theme', currentTheme);\n  }, [theme, currentTheme]);\n\n  const value = {\n    theme,\n    setTheme,\n    currentTheme\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,YAAY,CAAC;AAAA;AAACE,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,EAAE;MACd,OAAOA,UAAU;IACnB;;IAEA;IACA,OAAO,QAAQ;EACjB,CAAC;EAED,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACU,eAAe,CAAC;EACnD,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE3D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMiB,UAAU,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC;IAEpE,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIP,KAAK,KAAK,QAAQ,EAAE;QACtBG,eAAe,CAACC,UAAU,CAACI,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;MACxD;IACF,CAAC;;IAED;IACAD,YAAY,CAAC,CAAC;;IAEd;IACAH,UAAU,CAACK,gBAAgB,CAAC,QAAQ,EAAEF,YAAY,CAAC;IAEnD,OAAO,MAAM;MACXH,UAAU,CAACM,mBAAmB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IACxD,CAAC;EACH,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;;EAEX;EACAb,SAAS,CAAC,MAAM;IACd,IAAIa,KAAK,KAAK,QAAQ,EAAE;MACtB,MAAMW,UAAU,GAAGN,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACE,OAAO;MAC5EL,eAAe,CAACQ,UAAU,GAAG,MAAM,GAAG,OAAO,CAAC;IAChD,CAAC,MAAM;MACLR,eAAe,CAACH,KAAK,CAAC;IACxB;;IAEA;IACAF,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;;IAEpC;IACAa,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEb,YAAY,CAAC;EACnE,CAAC,EAAE,CAACF,KAAK,EAAEE,YAAY,CAAC,CAAC;EAEzB,MAAMc,KAAK,GAAG;IACZhB,KAAK;IACLC,QAAQ;IACRC;EACF,CAAC;EAED,oBACEb,OAAA,CAACC,YAAY,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAtB,QAAA,EACjCA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAC1B,GAAA,CA/DWF,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}