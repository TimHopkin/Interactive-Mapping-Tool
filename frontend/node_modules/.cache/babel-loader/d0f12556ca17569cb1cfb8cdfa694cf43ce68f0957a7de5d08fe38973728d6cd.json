{"ast":null,"code":"var _jsxFileName = \"/Users/timhopkin/Documents/Software Development/Interactive Mapping Tool/frontend/src/components/map/MapLegend.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapLegend = ({\n  layers\n}) => {\n  if (!layers || layers.length === 0) {\n    return null;\n  }\n\n  // Function to render legend items based on layer type and style\n  const renderLegendItems = layer => {\n    if (!layer.style) return null;\n    if (layer.style.type === 'categorical' && layer.style.property && layer.style.values) {\n      // Handle categorical styling (e.g., land use types with different colors)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"legend-layer-name\",\n          children: layer.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-items\",\n          children: Object.entries(layer.style.values).map(([value, style]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: style.color || '#ccc',\n                opacity: style.opacity || 1,\n                border: style.weight ? `${style.weight}px solid ${style.color || '#ccc'}` : 'none'\n              },\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-label\",\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)]\n          }, value, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, layer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n    } else if (layer.style.type === 'gradient' && layer.style.property && layer.style.stops) {\n      // Handle gradient styling (e.g., population density from low to high values)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"legend-layer-name\",\n          children: layer.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-gradient\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gradient-bar\",\n            style: {\n              background: `linear-gradient(to right, ${layer.style.stops.map(stop => stop.color).join(', ')})`\n            },\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gradient-labels\",\n            children: layer.style.stops.map((stop, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"gradient-label\",\n              children: stop.value\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, layer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    } else {\n      // Handle simple styling (e.g., single color for a layer)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"legend-layer-name\",\n          children: layer.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-items\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: typeof layer.style === 'object' ? layer.style.color || '#ccc' : '#ccc',\n                opacity: typeof layer.style === 'object' ? layer.style.opacity || 1 : 1\n              },\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-label\",\n              children: layer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, layer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-legend\",\n    \"aria-label\": \"Map legend\",\n    role: \"region\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"legend-title\",\n        children: \"Legend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"collapse-legend\",\n        \"aria-label\": \"Collapse legend\",\n        \"aria-expanded\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\u2212\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-content\",\n      children: layers.map(layer => renderLegendItems(layer))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sr-only\",\n      \"aria-live\": \"polite\",\n      children: [\"Map legend showing \", layers.length, \" active layers:\", layers.map(layer => {\n        if (layer.style && layer.style.type === 'categorical' && layer.style.values) {\n          return `${layer.name} with categories: ${Object.keys(layer.style.values).join(', ')}. `;\n        } else {\n          return `${layer.name}. `;\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_c = MapLegend;\nexport default MapLegend;\nvar _c;\n$RefreshReg$(_c, \"MapLegend\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MapLegend","layers","length","renderLegendItems","layer","style","type","property","values","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","value","backgroundColor","color","opacity","border","weight","id","stops","background","stop","join","index","role","keys","_c","$RefreshReg$"],"sources":["/Users/timhopkin/Documents/Software Development/Interactive Mapping Tool/frontend/src/components/map/MapLegend.js"],"sourcesContent":["import React from 'react';\n\nconst MapLegend = ({ layers }) => {\n  if (!layers || layers.length === 0) {\n    return null;\n  }\n\n  // Function to render legend items based on layer type and style\n  const renderLegendItems = (layer) => {\n    if (!layer.style) return null;\n    \n    if (layer.style.type === 'categorical' && layer.style.property && layer.style.values) {\n      // Handle categorical styling (e.g., land use types with different colors)\n      return (\n        <div className=\"legend-group\" key={layer.id}>\n          <h4 className=\"legend-layer-name\">{layer.name}</h4>\n          <div className=\"legend-items\">\n            {Object.entries(layer.style.values).map(([value, style]) => (\n              <div className=\"legend-item\" key={value}>\n                <span \n                  className=\"legend-color\" \n                  style={{ \n                    backgroundColor: style.color || '#ccc',\n                    opacity: style.opacity || 1,\n                    border: style.weight ? `${style.weight}px solid ${style.color || '#ccc'}` : 'none'\n                  }}\n                  aria-hidden=\"true\"\n                ></span>\n                <span className=\"legend-label\">{value}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      );\n    } else if (layer.style.type === 'gradient' && layer.style.property && layer.style.stops) {\n      // Handle gradient styling (e.g., population density from low to high values)\n      return (\n        <div className=\"legend-group\" key={layer.id}>\n          <h4 className=\"legend-layer-name\">{layer.name}</h4>\n          <div className=\"legend-gradient\">\n            <div \n              className=\"gradient-bar\"\n              style={{\n                background: `linear-gradient(to right, ${layer.style.stops.map(stop => stop.color).join(', ')})`\n              }}\n              aria-hidden=\"true\"\n            ></div>\n            <div className=\"gradient-labels\">\n              {layer.style.stops.map((stop, index) => (\n                <span key={index} className=\"gradient-label\">{stop.value}</span>\n              ))}\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      // Handle simple styling (e.g., single color for a layer)\n      return (\n        <div className=\"legend-group\" key={layer.id}>\n          <h4 className=\"legend-layer-name\">{layer.name}</h4>\n          <div className=\"legend-items\">\n            <div className=\"legend-item\">\n              <span \n                className=\"legend-color\" \n                style={{ \n                  backgroundColor: typeof layer.style === 'object' ? (layer.style.color || '#ccc') : '#ccc',\n                  opacity: typeof layer.style === 'object' ? (layer.style.opacity || 1) : 1\n                }}\n                aria-hidden=\"true\"\n              ></span>\n              <span className=\"legend-label\">{layer.name}</span>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div \n      className=\"map-legend\" \n      aria-label=\"Map legend\"\n      role=\"region\"\n    >\n      <div className=\"legend-header\">\n        <h3 className=\"legend-title\">Legend</h3>\n        <button \n          className=\"collapse-legend\"\n          aria-label=\"Collapse legend\"\n          aria-expanded=\"true\"\n        >\n          <span aria-hidden=\"true\">−</span>\n        </button>\n      </div>\n      \n      <div className=\"legend-content\">\n        {layers.map(layer => renderLegendItems(layer))}\n      </div>\n      \n      {/* Screen reader description of the legend */}\n      <div className=\"sr-only\" aria-live=\"polite\">\n        Map legend showing {layers.length} active layers: \n        {layers.map(layer => {\n          if (layer.style && layer.style.type === 'categorical' && layer.style.values) {\n            return `${layer.name} with categories: ${Object.keys(layer.style.values).join(', ')}. `;\n          } else {\n            return `${layer.name}. `;\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MapLegend;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}